name: Release
on:
  workflow_call:
    inputs:
      PROJECT_NAME:
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true
      NPM_REGISTRY_CREDENTIALS:
        required: true
      INFRA_SERVICES_DOCKER:
        required: true
jobs:
  next-version:
    runs-on: ubuntu-22.04
    env:
      CI: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: '${{ secrets.NPM_REGISTRY_CREDENTIALS }}'
      - name: Login to Artifact Registry
        run: yarn run artifactregistry-login
      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - run: npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}

  publish-image:
    name: Publish artifacts
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    env:
      CI: true
    needs: next-version
    if: needs.next-version.outputs.new-release-published == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: '${{ secrets.NPM_REGISTRY_CREDENTIALS }}'
      - name: Login to Artifact Registry
        run: yarn run artifactregistry-login
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build project and types
        run: yarn tsc && yarn build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.INFRA_SERVICES_DOCKER }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: gcr.io/prj-mundi-infra-services/${{ inputs.PROJECT_NAME }}:${{ needs.next-version.outputs.new-release-version }}

  semantic-release:
    name: Release semantic version
    runs-on: ubuntu-22.04
    needs: [publish-image]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Set @mundibot as committer
        run: |
          git config --global user.name "mundibot"
          git config --global user.email "tech@mundi.io"
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: '${{ secrets.NPM_REGISTRY_CREDENTIALS }}'
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: '${{ secrets.NPM_REGISTRY_CREDENTIALS }}'
      - name: Login to Artifact Registry
        run: yarn run artifactregistry-login
      - run: yarn install --frozen-lockfile --ignore-scripts
      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
